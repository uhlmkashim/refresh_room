"use strict";
! function() {
    function t() {
        this.variables = null, this.swf = null, this.el = "#dialogue", this.$el = null, this.pex = null, this.api = null, this.comment_list = null, this.comment_el = ".comment-container", this.story = ".story", this.btn = "_btn", this.initilized = !1, this.speed = 60, this.scene = 0, this.line = 0, this.$story = null, this.flag = !1, this.comment_deffered = null, this.motion_wait = !1, this.is_pc = null, this.width = !1
    }
    var i = window.refreshRoom || {};
    i.dialogue = i.dialogue || new t;
    var e = window.Pex;
    t.prototype.setVariables = function(t) {
        this.variables = new Object, $.extend(this.variables, t)
    }, t.prototype.setSwf = function(t) {
        if (!t) return !1;
        this.swf = t;
        var i = this;
        return this.pex = new e(this.swf, this.el.replace(/\#/g, "")), this.api = this.pex.getAPI(), this.api.ready(function() {
            i.api.destroy(), i.api = null, i.pex = null, $(i.el).empty().css({
                display: "block"
            }), i.init()
        }), !0
    }, t.prototype.startSwf = function() {
        return !!i.dialogueSwf && (this.setSwf(i.dialogueSwf), !0)
    }, t.prototype.init = function() {
        if (this.$el || (this.$el = $(this.el)), 0 == this.$el.length) return !1;
        this.initilized || (this.initCommenter(), this.initilized = !0), this.comment_deferred = $.Deferred();
        var t = this;
        return this.comment_deferred.done(function() {
            t.frameCallback()
        }), this.runPex(), !0
    }, t.prototype.initCommenter = function() {
        if (!this.initilized) {
            var t = this;
            this.setAspect(), this.comment_disp = $(this.comment_el + " > span"), this.commenter = $(this.story).comment_timer({
                click: this.story.replace(/\.|\#/g, "") + this.btn,
                speed: this.speed,
                call: function() {
                    t.callback()
                }
            })
        }
    }, t.prototype.setAspect = function() {
        window.scrollTo(0, 1);
        var t = i.is_pc || window.devicePixelRatio >= 1.5 && !i.old_os ? .5 : 1,
            e = this.scaleSizeCheck() * t;
        e > 600 && $("#next").addClass("zoom-size");
        var s = e / 320,
            n = $(this.comment_el),
            o = parseInt(n.css("top")),
            a = parseInt(n.css("left")),
            r = n.css("font-size"),
            l = r.replace(/(\d+)/, ""),
            h = n.css("letter-spacing");
        n.css({
            top: o * s,
            left: a * s,
            "font-size": parseInt(r) * s + l,
            "line-height": (parseInt(r) + 3) * s + l,
            "letter-spacing": parseInt(h) * s + "px"
        })
    }, t.prototype.runPex = function() {
        var t = this;
        this.width || (this.width = this.scaleSizeCheck());
        var s = this.width,
            n = {
                enableButton: !1,
                partialDraw: window.getPexPartialDraw(),
                delayEval: !1,
                transparent: !0,
                touchEvent: !1,
                operation: {
                    lighter_tgt: "lighter"
                },
                width: s,
                frameCallback: {
                    "/fkds": {
                        18: function() {
                            t.frameCallback()
                        }
                    }
                }
            },
            o = $(".plate-area");
        this.clear_comment(), this.flag = !0, this.pex = new e(this.swf, this.el.replace(/\#/g, ""), n), this.api = this.pex.getAPI(), this.api.ready(function() {
            var e = $.extend({}, t.variables),
                s = window.petitManager.getCharactersKeys();
            e.unit_num = s.length;
            for (var n in s) {
                var a = i.detail[t.scene]["message_arrow_" + s[n]],
                    r = i.detail[t.scene].message_window_type ? 2 : 1;
                e.speak_type = r, a ? (e["position" + s[n] + "_talk"] = a, o.filter("[rel=" + s[n] + "]").addClass("talking").show()) : o.filter("[rel=" + s[n] + "]").removeClass("talking")
            }
            t.api.setVariables("/", e)
        })
    }, t.prototype.clear_comment = function() {
        this.api && (this.api.destroy(), this.api = null, $(this.el).empty())
    }, t.prototype.setCommentList = function(t) {
        return !!t && (this.comment_list = t, !0)
    }, t.prototype.frameCallback = function() {
        this.setCommentList(i.detail[this.scene].message.split(/\n/)), this.comment_disp.eq(this.line).addClass("comment").data("comment", this.comment_list[this.line]), this.$story || (this.$story = $(this.story + this.btn)), this.flag = !1, this.$story.trigger("click")
    }, t.prototype.setMotion = function() {
        var t = i.detail[this.scene],
            e = window.petitManager.getCharactersKeys(),
            s = $(".plate-area");
        for (var n in e) window.petitManager.deleteCallAction(e[n]), window.petitManager.addCallAction(e[n], function(i) {
            var e = t["motion" + i.position],
                n = 100;
            if (1 == t.id ? "out" == e ? ($("#animation_" + i.position).hide(), n = 0) : s.filter("[rel=" + i.position + "]").show() : "in_walk" == e && $("#animation_" + i.position).show(), !e) {
                var o = i.api.getVariable("", "motion_act");
                if (!("string" == typeof o && o.indexOf("in_walk") > -1)) return;
                e = "stay", s.filter("[rel=" + i.position + "]").show()
            }
            var a = {
                motion_act: e
            };
            setTimeout(function() {
                i.api.setVariables("", a), i.api.callActions("", "motion_set")
            }, n)
        })
    }, t.prototype.callMotion = function() {
        var t = window.petitManager.getCharactersKeys();
        for (var i in t) window.petitManager.callPetitAction(t[i])
    }, t.prototype.callback = function() {
        this.line++, this.comment_list[this.line] ? (this.comment_disp.removeClass("comment").eq(this.line).addClass("comment").data("comment", this.comment_list[this.line]), this.$story.trigger("click")) : $("#next").addClass("show-arrow")
    }, t.prototype.changeNext = function() {
        $("#next").removeClass("show-arrow"), this.motion_wait = !1, this.comment_disp.text("").removeClass("comment"), this.scene++, this.line = 0;
        var t = !1,
            e = window.petitManager.getCharactersKeys(),
            s = this.api ? this.api.getVariables("/") : {};
        for (var n in e) {
            var o = i.detail[this.scene]["message_arrow_" + e[n]] ? 1 : 0,
                a = s["position" + e[n] + "_talk"] ? 1 : 0,
                r = i.detail[this.scene].speak_type ? 2 : 1,
                l = s.speak_type;
            if (o != a || r != l) {
                t = !0;
                break
            }
        }
        t ? i.detail[this.scene].message ? this.init() : (this.motion_wait = !0, this.comment_list = [], this.clear_comment()) : (this.setCommentList(i.detail[this.scene].message.split(/\n/)), this.comment_disp.eq(this.line).addClass("comment").data("comment", this.comment_list[this.line]), this.$story.trigger("click")), this.setMotion(), this.callMotion()
    }, t.prototype.showAll = function() {
        for (var t in this.comment_disp) this.comment_disp.eq(t).text(this.comment_list[t]);
        this.line = this.comment_list.length
    }, t.prototype.scaleSizeCheck = function(t) {
        var i = 320;
        return t ? (this.is_pc = !0, i = this.setSize(!0)) : null === this.is_pc ? (this.is_pc = !1, i = this.setSize(!0)) : i = this.setSize(!1), i
    }, t.prototype.scaleSizeCalculate = function() {
        var t = 320;
        if (this.is_pc || window.devicePixelRatio >= 1.5 && !i.old_os) {
            var e = window.innerWidth,
                s = window.innerHeight,
                n = e / 240,
                o = s / 320,
                a = o;
            s > e && (a = n), t = 480 * a
        }
        return t
    }, t.prototype.setSize = function(t) {
        var e = this.scaleSizeCalculate(),
            s = 320;
        return 320 == e || (e >= 1280 ? (e = 1280, s = 640) : .5 * e < 320 ? (e = 640, s = 320) : s = .5 * e), t && ($("#pageContainer").css({
            width: s,
            "overflow-x": "hidden"
        }), e != s && (i.is_multiply = !0)), e
    }, window.refreshRoom = i
}(), $(function() {
    var t = window.refreshRoom,
        i = !1;
    $("#next").on("click", function(e) {
        if ("#" != $(e.currentTarget).attr("href")) return !0;
        if (i) return !1;
        if (i = !0, !t.dialogue) return i = !1, !1;
        var s = t.dialogue;
        if (!s.initilized || s.flag) return i = !1, !1;
        for (var n in s.commenter.timer) clearInterval(s.commenter.timer[n]);
        return void 0 == s.comment_list ? (i = !1, !1) : s.comment_list[s.line] ? (s.showAll(), $("#next").addClass("show-arrow"), setTimeout(function() {
            i = !1
        }, 300), !1) : t.detail[s.scene + 1] ? (s.changeNext(), setTimeout(function() {
            i = !1
        }, 300), !1) : ($(e.currentTarget).attr("href", t.returnUrl), !0)
    })
});
